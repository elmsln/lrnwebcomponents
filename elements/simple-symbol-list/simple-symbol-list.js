/**
 * an array of symbol character, category, and description data
 */
export const SimpleSymbolList = [
  { character: "&iexcl;", type: "symbols" },
  { character: "&cent;", type: "symbols" },
  { character: "&pound;", type: "symbols" },
  { character: "&curren;", type: "symbols" },
  { character: "&yen;", type: "symbols" },
  { character: "&brvbar;", type: "symbols" },
  { character: "&sect;", type: "symbols" },
  { character: "&uml;", type: "symbols" },
  { character: "&copy;", type: "symbols" },
  { character: "&ordf;", type: "symbols" },
  { character: "&laquo;", type: "symbols" },
  { character: "&not;", type: "symbols" },
  { character: "&shy;", type: "symbols" },
  { character: "&reg;", type: "symbols" },
  { character: "&macr;", type: "symbols" },
  { character: "&deg;", type: "symbols" },
  { character: "&plusmn;", type: "symbols" },
  { character: "&sup2;", type: "symbols" },
  { character: "&sup3;", type: "symbols" },
  { character: "&acute;", type: "symbols" },
  { character: "&micro;", type: "symbols" },
  { character: "&para;", type: "symbols" },
  { character: "&cedil;", type: "symbols" },
  { character: "&sup1;", type: "symbols" },
  { character: "&ordm;", type: "symbols" },
  { character: "&raquo;", type: "symbols" },
  { character: "&frac14;", type: "symbols" },
  { character: "&frac12;", type: "symbols" },
  { character: "&frac34;", type: "symbols" },
  { character: "&iquest;", type: "symbols" },
  { character: "&times;", type: "symbols" },
  { character: "&divide;", type: "symbols" },
  { character: "&forall;", type: "math" },
  { character: "&part;", type: "math" },
  { character: "&exist;", type: "math" },
  { character: "&empty;", type: "math" },
  { character: "&nabla;", type: "math" },
  { character: "&isin;", type: "math" },
  { character: "&notin;", type: "math" },
  { character: "&ni;", type: "math" },
  { character: "&prod;", type: "math" },
  { character: "&sum;", type: "math" },
  { character: "&minus;", type: "math" },
  { character: "&lowast;", type: "math" },
  { character: "&radic;", type: "math" },
  { character: "&prop;", type: "math" },
  { character: "&infin;", type: "math" },
  { character: "&ang;", type: "math" },
  { character: "&and;", type: "math" },
  { character: "&or;", type: "math" },
  { character: "&cap;", type: "math" },
  { character: "&cup;", type: "math" },
  { character: "&int;", type: "math" },
  { character: "&there4;", type: "math" },
  { character: "&sim;", type: "math" },
  { character: "&cong;", type: "math" },
  { character: "&asymp;", type: "math" },
  { character: "&ne;", type: "math" },
  { character: "&equiv;", type: "math" },
  { character: "&le;", type: "math" },
  { character: "&ge;", type: "math" },
  { character: "&sub;", type: "math" },
  { character: "&sup;", type: "math" },
  { character: "&nsub;", type: "math" },
  { character: "&sube;", type: "math" },
  { character: "&supe;", type: "math" },
  { character: "&oplus;", type: "math" },
  { character: "&otimes;", type: "math" },
  { character: "&perp;", type: "math" },
  { character: "&sdot;", type: "math" },
  { character: "&Agrave;", type: "characters" },
  { character: "&Aacute;", type: "characters" },
  { character: "&Acirc;", type: "characters" },
  { character: "&Atilde;", type: "characters" },
  { character: "&Auml;", type: "characters" },
  { character: "&Aring;", type: "characters" },
  { character: "&AElig;", type: "characters" },
  { character: "&Ccedil;", type: "characters" },
  { character: "&Egrave;", type: "characters" },
  { character: "&Eacute;", type: "characters" },
  { character: "&Ecirc;", type: "characters" },
  { character: "&Euml;", type: "characters" },
  { character: "&Igrave;", type: "characters" },
  { character: "&Iacute;", type: "characters" },
  { character: "&Icirc;", type: "characters" },
  { character: "&Iuml;", type: "characters" },
  { character: "&ETH;", type: "characters" },
  { character: "&Ntilde;", type: "characters" },
  { character: "&Ograve;", type: "characters" },
  { character: "&Oacute;", type: "characters" },
  { character: "&Ocirc;", type: "characters" },
  { character: "&Otilde;", type: "characters" },
  { character: "&Ouml;", type: "characters" },
  { character: "&Oslash;", type: "characters" },
  { character: "&Ugrave;", type: "characters" },
  { character: "&Uacute;", type: "characters" },
  { character: "&Ucirc;", type: "characters" },
  { character: "&Uuml;", type: "characters" },
  { character: "&Yacute;", type: "characters" },
  { character: "&THORN;", type: "characters" },
  { character: "&szlig;", type: "characters" },
  { character: "&agrave;", type: "characters" },
  { character: "&aacute;", type: "characters" },
  { character: "&acirc;", type: "characters" },
  { character: "&atilde;", type: "characters" },
  { character: "&auml;", type: "characters" },
  { character: "&aring;", type: "characters" },
  { character: "&aelig;", type: "characters" },
  { character: "&ccedil;", type: "characters" },
  { character: "&egrave;", type: "characters" },
  { character: "&eacute;", type: "characters" },
  { character: "&ecirc;", type: "characters" },
  { character: "&euml;", type: "characters" },
  { character: "&igrave;", type: "characters" },
  { character: "&iacute;", type: "characters" },
  { character: "&icirc;", type: "characters" },
  { character: "&iuml;", type: "characters" },
  { character: "&eth;", type: "characters" },
  { character: "&ntilde;", type: "characters" },
  { character: "&ograve;", type: "characters" },
  { character: "&oacute;", type: "characters" },
  { character: "&ocirc;", type: "characters" },
  { character: "&otilde;", type: "characters" },
  { character: "&ouml;", type: "characters" },
  { character: "&oslash;", type: "characters" },
  { character: "&ugrave;", type: "characters" },
  { character: "&uacute;", type: "characters" },
  { character: "&ucirc;", type: "characters" },
  { character: "&uuml;", type: "characters" },
  { character: "&yacute;", type: "characters" },
  { character: "&thorn;", type: "characters" },
  { character: "&yuml;", type: "characters" },
  { character: "&Alpha;", type: "greek" },
  { character: "&Beta;", type: "greek" },
  { character: "&Gamma;", type: "greek" },
  { character: "&Delta;", type: "greek" },
  { character: "&Epsilon;", type: "greek" },
  { character: "&Zeta;", type: "greek" },
  { character: "&Eta;", type: "greek" },
  { character: "&Theta;", type: "greek" },
  { character: "&Iota;", type: "greek" },
  { character: "&Kappa;", type: "greek" },
  { character: "&Lambda;", type: "greek" },
  { character: "&Mu;", type: "greek" },
  { character: "&Nu;", type: "greek" },
  { character: "&Xi;", type: "greek" },
  { character: "&Omicron;", type: "greek" },
  { character: "&Pi;", type: "greek" },
  { character: "&Rho;", type: "greek" },
  { character: "&Sigma;", type: "greek" },
  { character: "&Tau;", type: "greek" },
  { character: "&Upsilon;", type: "greek" },
  { character: "&Phi;", type: "greek" },
  { character: "&Chi;", type: "greek" },
  { character: "&Psi;", type: "greek" },
  { character: "&Omega;", type: "greek" },
  { character: "&alpha;", type: "greek" },
  { character: "&beta;", type: "greek" },
  { character: "&gamma;", type: "greek" },
  { character: "&delta;", type: "greek" },
  { character: "&epsilon;", type: "greek" },
  { character: "&zeta;", type: "greek" },
  { character: "&eta;", type: "greek" },
  { character: "&theta;", type: "greek" },
  { character: "&iota;", type: "greek" },
  { character: "&kappa;", type: "greek" },
  { character: "&lambda;", type: "greek" },
  { character: "&mu;", type: "greek" },
  { character: "&nu;", type: "greek" },
  { character: "&xi;", type: "greek" },
  { character: "&omicron;", type: "greek" },
  { character: "&pi;", type: "greek" },
  { character: "&rho;", type: "greek" },
  { character: "&sigmaf;", type: "greek" },
  { character: "&sigma;", type: "greek" },
  { character: "&tau;", type: "greek" },
  { character: "&upsilon;", type: "greek" },
  { character: "&phi;", type: "greek" },
  { character: "&chi;", type: "greek" },
  { character: "&psi;", type: "greek" },
  { character: "&omega;", type: "greek" },
  { character: "&thetasym;", type: "greek" },
  { character: "&upsih;", type: "greek" },
  { character: "&piv;", type: "greek" },
  { character: "&otilde;", type: "greek" },
  { character: "&ouml;", type: "greek" },
  { character: "&oslash;", type: "greek" },
  { character: "&ugrave;", type: "greek" },
  { character: "&uacute;", type: "greek" },
  { character: "&ucirc;", type: "greek" },
  { character: "&uuml;", type: "greek" },
  { character: "&yacute;", type: "greek" },
  { character: "&thorn;", type: "greek" },
  { character: "&yuml;", type: "greek" },
  { character: "&OElig;", type: "misc" },
  { character: "&oelig;", type: "misc" },
  { character: "&Scaron;", type: "misc" },
  { character: "&scaron;", type: "misc" },
  { character: "&Yuml;", type: "misc" },
  { character: "&fnof;", type: "misc" },
  { character: "&circ;", type: "misc" },
  { character: "&tilde;", type: "misc" },
  { character: "&ensp;", type: "misc" },
  { character: "&emsp;", type: "misc" },
  { character: "&thinsp;", type: "misc" },
  { character: "&zwnj;", type: "misc" },
  { character: "&zwj;", type: "misc" },
  { character: "&lrm;", type: "misc" },
  { character: "&rlm;", type: "misc" },
  { character: "&ndash;", type: "misc" },
  { character: "&mdash;", type: "misc" },
  { character: "&lsquo;", type: "misc" },
  { character: "&rsquo;", type: "misc" },
  { character: "&sbquo;", type: "misc" },
  { character: "&ldquo;", type: "misc" },
  { character: "&rdquo;", type: "misc" },
  { character: "&bdquo;", type: "misc" },
  { character: "&dagger;", type: "misc" },
  { character: "&Dagger;", type: "misc" },
  { character: "&bull;", type: "misc" },
  { character: "&hellip;", type: "misc" },
  { character: "&permil;", type: "misc" },
  { character: "&prime;", type: "misc" },
  { character: "&Prime;", type: "misc" },
  { character: "&lsaquo;", type: "misc" },
  { character: "&rsaquo;", type: "misc" },
  { character: "&oline;", type: "misc" },
  { character: "&euro;", type: "misc" },
  { character: "&trade;", type: "misc" },
  { character: "&larr;", type: "misc" },
  { character: "&uarr;", type: "misc" },
  { character: "&rarr;", type: "misc" },
  { character: "&darr;", type: "misc" },
  { character: "&harr;", type: "misc" },
  { character: "&crarr;", type: "misc" },
  { character: "&lceil;", type: "misc" },
  { character: "&rceil;", type: "misc" },
  { character: "&lfloor;", type: "misc" },
  { character: "&rfloor;", type: "misc" },
  { character: "&loz;", type: "misc" },
  { character: "&spades;", type: "misc" },
  { character: "&clubs;", type: "misc" },
  { character: "&hearts;", type: "misc" },
  { character: "&diams;", type: "misc" },
  { character: "&upsih;", type: "misc" },
  { character: "&piv;", type: "misc" },
  { character: "&otilde;", type: "misc" },
  { character: "&ouml;", type: "misc" },
  { character: "&oslash;", type: "misc" },
  { character: "&ugrave;", type: "misc" },
  { character: "&uacute;", type: "misc" },
  { character: "&ucirc;", type: "misc" },
  { character: "&uuml;", type: "misc" },
  { character: "&yacute;", type: "misc" },
  { character: "&thorn;", type: "misc" },
  { character: "&yuml;", type: "misc" },
];
